{"ast":null,"code":"import{SET_POSTS,LOADING_DATA,LIKE_POST,UNLIKE_POST,DELETE_POST,SET_ERRORS,CLEAR_ERRORS,POSTING,LOADING_UI}from'../types';import axios from'axios';//get all posts\nexport var getPosts=function getPosts(){return function(dispatch){dispatch({type:LOADING_DATA});axios.get('/posts').then(function(result){dispatch({type:SET_POSTS,payload:result.data});}).catch(function(err){dispatch({type:SET_POSTS,payload:null});});};};//create feedback\nexport var feedbackAction=function feedbackAction(newFeedback){return function(dispatch){console.log(newFeedback);dispatch({type:LOADING_UI});axios.post('/feedback',newFeedback).then(function(result){dispatch({type:POSTING,payload:result.data});dispatch({type:CLEAR_ERRORS});}).catch(function(error){dispatch({type:SET_ERRORS,payload:error.response.data});});};};//like a post\nexport var likePost=function likePost(postId){return function(dispatch){axios.get(\"/post/\".concat(postId,\"/like\")).then(function(result){dispatch({type:LIKE_POST,payload:result.data});}).catch(function(err){return console.log(err);});};};//unlike a post\nexport var unlikePost=function unlikePost(postId){return function(dispatch){axios.get(\"/post/\".concat(postId,\"/unlike\")).then(function(result){dispatch({type:UNLIKE_POST,payload:result.data});}).catch(function(err){return console.log(err);});};};//delete a post\nexport var deletePost=function deletePost(postId){return function(dispatch){axios.delete(\"/post/\".concat(postId)).then(function(){dispatch({type:DELETE_POST,payload:postId});}).catch(function(error){return console.log(error);});};};","map":{"version":3,"sources":["C:/Users/Michael Tho/Documents/GitHub/Frontend492/src/redux/actions/dataActions.js"],"names":["SET_POSTS","LOADING_DATA","LIKE_POST","UNLIKE_POST","DELETE_POST","SET_ERRORS","CLEAR_ERRORS","POSTING","LOADING_UI","axios","getPosts","dispatch","type","get","then","result","payload","data","catch","err","feedbackAction","newFeedback","console","log","post","error","response","likePost","postId","unlikePost","deletePost","delete"],"mappings":"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","sourcesContent":["import { SET_POSTS,LOADING_DATA,LIKE_POST,UNLIKE_POST,DELETE_POST,SET_ERRORS,CLEAR_ERRORS,POSTING,LOADING_UI } from '../types';\r\nimport axios from 'axios';\r\n\r\n//get all posts\r\nexport const getPosts = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/posts')\r\n    .then((result) => {\r\n        dispatch({\r\n            type: SET_POSTS,\r\n            payload: result.data\r\n        })\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: SET_POSTS,\r\n            payload: null\r\n        })\r\n    })\r\n}\r\n\r\n//create feedback\r\nexport const feedbackAction = (newFeedback) => (dispatch) => {\r\n    console.log(newFeedback);\r\n    dispatch({ type: LOADING_UI});\r\n    axios.post('/feedback',newFeedback)\r\n        .then((result) => {\r\n            dispatch({\r\n                type: POSTING,\r\n                payload: result.data\r\n            });\r\n            dispatch({\r\n                type: CLEAR_ERRORS\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: error.response.data\r\n            })\r\n        })\r\n}\r\n\r\n//like a post\r\nexport const likePost = (postId) => (dispatch) => {\r\n    axios.get(`/post/${postId}/like`)\r\n    .then((result) => {\r\n        dispatch({\r\n            type: LIKE_POST,\r\n            payload: result.data\r\n        })\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\n//unlike a post\r\nexport const unlikePost = (postId) => (dispatch) => {\r\n    axios.get(`/post/${postId}/unlike`)\r\n    .then((result) => {\r\n        dispatch({\r\n            type: UNLIKE_POST,\r\n            payload: result.data\r\n        })\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\n//delete a post\r\nexport const deletePost = (postId) => (dispatch) => {\r\n    axios.delete(`/post/${postId}`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_POST, payload: postId})\r\n        })\r\n        .catch((error) => console.log(error))\r\n}"]},"metadata":{},"sourceType":"module"}