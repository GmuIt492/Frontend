{"ast":null,"code":"import { SET_POSTS, LOADING_DATA, LIKE_POST, UNLIKE_POST, POSTING, DELETE_POST } from '../types';\nconst initialState = {\n  posts: [],\n  feedback: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  let index;\n\n  switch (action.type) {\n    //load posts\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n    //set post w/ payload\n\n    case SET_POSTS:\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n    //find and match post with payload to like\n\n    case LIKE_POST:\n    case UNLIKE_POST:\n      index = state.posts.findIndex(post => post.postId === action.payload.postId);\n      state.posts[index] = action.payload;\n      return { ...state\n      };\n\n    case DELETE_POST:\n      index = state.posts.findIndex(post => post.postId === action.payload);\n      state.posts.splice(index, 1);\n      return { ...state\n      };\n\n    case POSTING:\n      return { ...state,\n        feedback: [action.payload, ...state.posts]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Michael Tho/Documents/GitHub/Frontend492/src/redux/reducers/dataReducer.js"],"names":["SET_POSTS","LOADING_DATA","LIKE_POST","UNLIKE_POST","POSTING","DELETE_POST","initialState","posts","feedback","loading","state","action","index","type","payload","findIndex","post","postId","splice"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,YAAnB,EAAgCC,SAAhC,EAA0CC,WAA1C,EAAsDC,OAAtD,EAA8DC,WAA9D,QAAiF,UAAjF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA8BK,MAA9B,EAAsC;AACjD,MAAIC,KAAJ;;AACA,UAAOD,MAAM,CAACE,IAAd;AACI;AACA,SAAKZ,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIJ;;AACA,SAAKT,SAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACG,OAFX;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;AAKJ;;AACA,SAAKP,SAAL;AACA,SAAKC,WAAL;AACIS,MAAAA,KAAK,GAAGF,KAAK,CAACH,KAAN,CAAYQ,SAAZ,CAAuBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBN,MAAM,CAACG,OAAP,CAAeG,MAA/D,CAAR;AACAP,MAAAA,KAAK,CAACH,KAAN,CAAYK,KAAZ,IAAqBD,MAAM,CAACG,OAA5B;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;;AAGJ,SAAKL,WAAL;AACIO,MAAAA,KAAK,GAAGF,KAAK,CAACH,KAAN,CAAYQ,SAAZ,CAAuBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBN,MAAM,CAACG,OAAvD,CAAR;AACAJ,MAAAA,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBN,KAAnB,EAAyB,CAAzB;AACA,aAAO,EACH,GAAGF;AADA,OAAP;;AAGJ,SAAKN,OAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,QAAQ,EAAE,CACNG,MAAM,CAACG,OADD,EAEN,GAAGJ,KAAK,CAACH,KAFH;AAFP,OAAP;;AAOJ;AACI,aAAOG,KAAP;AArCR;AAuCH","sourcesContent":["import { SET_POSTS,LOADING_DATA,LIKE_POST,UNLIKE_POST,POSTING,DELETE_POST } from '../types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    feedback: {},\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState,action) {\r\n    let index;\r\n    switch(action.type) {\r\n        //load posts\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        //set post w/ payload\r\n        case SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                loading: false\r\n            }\r\n        //find and match post with payload to like\r\n        case LIKE_POST:\r\n        case UNLIKE_POST:\r\n            index = state.posts.findIndex((post) => post.postId === action.payload.postId)\r\n            state.posts[index] = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_POST:\r\n            index = state.posts.findIndex((post) => post.postId === action.payload);\r\n            state.posts.splice(index,1);\r\n            return {\r\n                ...state\r\n            }\r\n        case POSTING:\r\n            return {\r\n                ...state,\r\n                feedback: [\r\n                    action.payload,\r\n                    ...state.posts\r\n                ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}