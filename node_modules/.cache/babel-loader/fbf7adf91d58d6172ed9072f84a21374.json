{"ast":null,"code":"import { SET_USER, SET_UNAUTHENTICATED, SET_AUTHENTICATED, LOADING_USER, LIKE_POST, UNLIKE_POST } from '../types'; //state of user reducer data\n\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n}; //switch case user login state\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    //change auth flag\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n    //change auth flag\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n    //set user details w/ payload\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n    //load user details\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n    //add like\n\n    case LIKE_POST:\n      return { ...state,\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          postId: action.payload.postId\n        }]\n      };\n    //remove like\n\n    case UNLIKE_POST:\n      return { ...state,\n        likes: state.likes.filter(like => like.postId !== action.payload.postId)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Michael Tho/Documents/GitHub/Frontend492/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_UNAUTHENTICATED","SET_AUTHENTICATED","LOADING_USER","LIKE_POST","UNLIKE_POST","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","userHandle","handle","postId","filter","like"],"mappings":"AAAA,SAASA,QAAT,EACIC,mBADJ,EAEIC,iBAFJ,EAGIC,YAHJ,EAIIC,SAJJ,EAKIC,WALJ,QAMO,UANP,C,CAQA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,aAAa,EAAE;AALE,CAArB,C,CAQA;;AACA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAKZ,iBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIJ;;AACA,SAAKN,mBAAL;AACI,aAAOK,YAAP;AACJ;;AACA,SAAKN,QAAL;AACI,aAAO;AACHO,QAAAA,aAAa,EAAE,IADZ;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGH,WAAGK,MAAM,CAACE;AAHP,OAAP;AAKJ;;AACA,SAAKZ,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIJ;;AACA,SAAKJ,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,KAAK,EAAE,CACH,GAAGE,KAAK,CAACF,KADN,EAEH;AACIM,UAAAA,UAAU,EAAEJ,KAAK,CAACH,WAAN,CAAkBQ,MADlC;AAEIC,UAAAA,MAAM,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAF3B,SAFG;AAFJ,OAAP;AAUJ;;AACA,SAAKb,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CACHC,IAAI,IAAIA,IAAI,CAACF,MAAL,KAAgBL,MAAM,CAACE,OAAP,CAAeG,MADpC;AAFJ,OAAP;;AAMJ;AACI,aAAON,KAAP;AA5CR;AA8CH","sourcesContent":["import { SET_USER,\r\n    SET_UNAUTHENTICATED,\r\n    SET_AUTHENTICATED,\r\n    LOADING_USER,\r\n    LIKE_POST,\r\n    UNLIKE_POST\r\n} from '../types';\r\n\r\n//state of user reducer data\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n};\r\n\r\n//switch case user login state\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        //change auth flag\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        //change auth flag\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        //set user details w/ payload\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            }\r\n        //load user details\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        //add like\r\n        case LIKE_POST:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.handle,\r\n                        postId: action.payload.postId\r\n                    }\r\n                ]\r\n            }\r\n        //remove like\r\n        case UNLIKE_POST:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(\r\n                    like => like.postId !== action.payload.postId\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}