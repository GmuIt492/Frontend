{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'; //util/reducer redux\n\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer'; //initialize\n\nconst initialState = {};\nconst middleware = [thunk];\nconsole.log(middleware); //combine reducer files\n\nconst reducers = combineReducers({\n  user: userReducer,\n  data: dataReducer,\n  UI: uiReducer\n}); //create store: requires redux devtools!!\n\nconst composeSetup = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\nconst store = createStore(reducers, initialState, composeSetup(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Michael Tho/Documents/GitHub/Frontend492/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","userReducer","dataReducer","uiReducer","initialState","middleware","console","log","reducers","user","data","UI","composeSetup","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AACAM,OAAO,CAACC,GAAR,CAAYF,UAAZ,E,CAEA;;AACA,MAAMG,QAAQ,GAAGX,eAAe,CAAC;AAC7BY,EAAAA,IAAI,EAAER,WADuB;AAE7BS,EAAAA,IAAI,EAAER,WAFuB;AAG7BS,EAAAA,EAAE,EAAER;AAHyB,CAAD,CAAhC,C,CAMA;;AACA,MAAMS,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,OAAOC,MAAP,KAAkB,QAA3D,IACjBA,MAAM,CAACC,oCADU,GAEjBD,MAAM,CAACC,oCAFU,GAE6BlB,OAFlD;AAGA,MAAMmB,KAAK,GAAGtB,WAAW,CACrBY,QADqB,EAErBJ,YAFqB,EAGrBQ,YAAY,CAACd,eAAe,CAAC,GAAGO,UAAJ,CAAhB,CAHS,CAAzB;AAMA,eAAea,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//util/reducer redux\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\n//initialize\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconsole.log(middleware);\r\n\r\n//combine reducer files\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\n//create store: requires redux devtools!!\r\nconst composeSetup = process.env.NODE_ENV !== 'production' && typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose\r\nconst store = createStore(\r\n    reducers,\r\n    initialState,\r\n    composeSetup(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}