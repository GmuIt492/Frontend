{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware,compose}from'redux';import thunk from'redux-thunk';//util/reducer redux\nimport userReducer from'./reducers/userReducer';import dataReducer from'./reducers/dataReducer';import uiReducer from'./reducers/uiReducer';//initialize\nvar initialState={};var middleware=[thunk];console.log(middleware);//combine reducer files\nvar reducers=combineReducers({user:userReducer,data:dataReducer,UI:uiReducer});//create store: requires redux devtools!!\nvar composeSetup=process.env.NODE_ENV!=='production'&&typeof window==='object'&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:compose;var store=createStore(reducers,initialState,composeSetup(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["C:/Users/Michael Tho/Documents/GitHub/Frontend492/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","userReducer","dataReducer","uiReducer","initialState","middleware","console","log","reducers","user","data","UI","composeSetup","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,CAAwDC,OAAxD,KAAuE,OAAvE,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CAEA;AACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,GAAMC,CAAAA,UAAU,CAAG,CAACL,KAAD,CAAnB,CACAM,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAEA;AACA,GAAMG,CAAAA,QAAQ,CAAGX,eAAe,CAAC,CAC7BY,IAAI,CAAER,WADuB,CAE7BS,IAAI,CAAER,WAFuB,CAG7BS,EAAE,CAAER,SAHyB,CAAD,CAAhC,CAMA;AACA,GAAMS,CAAAA,YAAY,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,EAAyC,MAAOC,CAAAA,MAAP,GAAkB,QAA3D,EACjBA,MAAM,CAACC,oCADU,CAEjBD,MAAM,CAACC,oCAFU,CAE6BlB,OAFlD,CAGA,GAAMmB,CAAAA,KAAK,CAAGtB,WAAW,CACrBY,QADqB,CAErBJ,YAFqB,CAGrBQ,YAAY,CAACd,eAAe,MAAf,QAAmBO,UAAnB,CAAD,CAHS,CAAzB,CAMA,cAAea,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//util/reducer redux\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\n//initialize\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconsole.log(middleware);\r\n\r\n//combine reducer files\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\n//create store: requires redux devtools!!\r\nconst composeSetup = process.env.NODE_ENV !== 'production' && typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose\r\nconst store = createStore(\r\n    reducers,\r\n    initialState,\r\n    composeSetup(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}