{"version":3,"sources":["components/navbar.js","components/header.js","components/footer.js","components/test.js","components/slideshow.js","components/insurance.js","components/googleMapApi.js","pages/home.js","pages/login.js","App.js","util/theme.js","serviceWorker.js","index.js"],"names":["navbar","className","AppBar","position","color","Toolbar","Button","component","Link","to","Component","header","footer","Grid","item","xs","Box","bgcolor","p","container","spacing","sm","test","slideshow","insurance","googleMapApi","class","width","height","id","src","frameborder","scrolling","marginheight","marginwidth","home","login","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVarients","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9ba6c7b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Material UI\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <AppBar position='sticky' color='transparent'>\r\n                    <Toolbar className=\"nav-container\">\r\n                        <Button color=\"secondary\" component={Link} to=\"/\">Home</Button> | \r\n                        <Button color=\"secondary\" component={Link} to=\"/\">Services</Button> | \r\n                        <Button color=\"secondary\" component={Link} to=\"/\">Eye Conditions</Button> | \r\n                        <Button color=\"secondary\" component={Link} to=\"/\">Appointments</Button> | \r\n                        <Button color=\"secondary\" component={Link} to=\"/\">About</Button>\r\n                        {/* <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button> */}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default navbar","import React, { Component } from 'react'\r\n\r\nclass header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default header","import React, { Component } from 'react'\r\n\r\n//Material UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nclass footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <Grid item xs={12}>\r\n                    <Box bgcolor=\"primary.main\" color=\"primary\" p={2}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Box p={2}>\r\n                                    Privacy Policy\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Box p={2}>\r\n                                    Contact\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={4}>\r\n                                <Box p={2}>\r\n                                    Terms &amp; Conditions \r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default footer","import React, { Component } from 'react'\r\n\r\nclass test extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Test</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default test","import React, { Component } from 'react'\r\n\r\nclass slideshow extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Create picture slideshow</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default slideshow","import React, { Component } from 'react'\r\n\r\nclass insurance extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Insurance Icon - require backend CRUD</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default insurance","import React, { Component } from 'react'\r\n\r\nclass googleMapApi extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"googleApi\">\r\n                <h1>Our Location</h1>\r\n                <div class=\"map\">\r\n                    <iframe width=\"800\" height=\"500\" id=\"map\"\r\n                        src=\"https://maps.google.com/maps?q=everyday%20eye%20care&t=&z=13&ie=UTF8&iwloc=&output=embed\"\r\n                        frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\">\r\n                    </iframe>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default googleMapApi","import React, { Component } from 'react'\r\n\r\n//components\r\nimport Test from '../components/test'\r\nimport Slideshow from '../components/slideshow'\r\nimport Insurance from '../components/insurance'\r\nimport GoogleMapApi from '../components/googleMapApi'\r\n\r\nclass home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"homepage\">\r\n                <h1>Home page</h1>\r\n                <Test/>\r\n                <Slideshow/>\r\n                <Insurance/>\r\n                <GoogleMapApi/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default home","import React, { Component } from 'react'\r\n\r\nclass login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default login","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n//Material UI\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\n//css\nimport './App.css';\n\n//components\nimport Navbar from './components/navbar'\nimport Header from './components/header'\nimport Footer from './components/footer'\n\n//pages\nimport home from './pages/home';\nimport login from './pages/login';\n\n//util\nimport themeFile from './util/theme';\n\nconst theme = createMuiTheme(themeFile);\n\nclass App extends Component {\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <Router>\n                        <Header/>\n                        <Navbar/>\n                        <Switch>\n                            <Route exact path='/' component={home}/>\n                            <Route exact path='/login' component={login}/>\n                        </Switch>\n                        <Footer/>\n                    </Router>\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","export default  {\r\n    palette: {\r\n        primary: {\r\n            light: '#b0fdfa',\r\n            main: '#61a0e2',\r\n            dark: '#323534',\r\n            contrastText: '#ffffff'\r\n        },\r\n        secondary: {\r\n            light: '#323534',\r\n            main: '#FFFFFF',\r\n            dark: '#29bdc1',\r\n            contrastText: '#929292'\r\n        }\r\n    },\r\n    typography: {\r\n        useNextVarients: true\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}